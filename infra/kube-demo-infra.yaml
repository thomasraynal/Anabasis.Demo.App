apiVersion: v1
kind: Namespace
metadata:
  labels:
    group: eventstore
  name: eventstore
---
apiVersion: v1
kind: Service
metadata:
  name: svc-eventstore
  namespace: eventstore
  labels:
    app: eventstore
spec:
  clusterIP: "None"
  ports:
  - port: 2113
    name: eventstore-web
  - port: 1113
    name: eventstore-tcp
  - port: 2112
    name: gossip
  selector:
    app: eventstore
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventstore
  namespace: eventstore
spec:
  selector:
    matchLabels:
      app: eventstore 
  replicas: 1
  template:
    metadata:
      labels:
        app: eventstore
    spec:
      containers:
      - name: eventstore
        image: eventstore/eventstore:21.10.1-bionic
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTSTORE_CLUSTER_SIZE
          value: "1"
        - name: EVENTSTORE_RUN_PROJECTIONS
          value: "All"
        - name: EVENTSTORE_START_STANDARD_PROJECTIONS
          value: "true"
        - name: EVENTSTORE_EXT_TCP_PORT
          value: "1113"
        - name: EVENTSTORE_HTTP_PORT
          value: "2113"
        - name: EVENTSTORE_INSECURE
          value: "true"
        - name: EVENTSTORE_ENABLE_EXTERNAL_TCP
          value: "true"
        - name: EVENTSTORE_MEM_DB
          value: "true"
        - name: EVENTSTORE_EXT_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports: 
        - containerPort: 2113
          name: eventstore-web
        - containerPort: 1113
          name: eventstore-tcp
        - containerPort: 2112
          name: gossip
        livenessProbe:
          httpGet:
            path: /
            port: 2113
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /
            port: 2113
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: rabbitmq
spec:
  replicas: 1
  override:
    statefulSet:
      spec:
        template:
          spec:
            containers:
              - name: rabbitmq
                volumeMounts:
                  - mountPath: /opt/rabbitmq/community-plugins
                    name: community-plugins
            volumes:
              - name: community-plugins
                emptyDir: {}
            initContainers:
              - command:
                  - sh
                  - -c
                  - curl -L -v https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/download/3.9.0/rabbitmq_delayed_message_exchange-3.9.0.ez --output /community-plugins/rabbitmq_delayed_message_exchange-3.9.0.ez
                image: curlimages/curl
                imagePullPolicy: IfNotPresent
                name: copy-community-plugins
                resources:
                  limits:
                    cpu: 100m
                    memory: 500Mi
                  requests:
                    cpu: 100m
                    memory: 500Mi
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                  - mountPath: /community-plugins/
                    name: community-plugins
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1
      memory: 1Gi
  rabbitmq:
          additionalPlugins:
          - rabbitmq_delayed_message_exchange
          additionalConfig: |
                  log.console.level = info
                  channel_max = 1700
                  default_user= guest 
                  default_pass = guest
                  default_user_tags.administrator = true
          envConfig: |
            PLUGINS_DIR=/opt/rabbitmq/plugins:/opt/rabbitmq/community-plugins
  service:
    type: LoadBalancer